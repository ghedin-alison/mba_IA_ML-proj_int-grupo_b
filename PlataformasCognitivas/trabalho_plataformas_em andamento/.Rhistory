knitr::opts_chunk$set(echo = TRUE)
install.packages("tidyverse")
library(dplyr)
library(ggplot2)
if(!file.exists('data')){
dir.create('data')
}
file.url='https://archive.ics.uci.edu/ml/machine-learning-databases/00560/SeoulBikeData.csv'
file.local=file.path('./data', basename(file.url))
download.file(url = file.url, destfile = file.local, mode = 'wb')
data <- read.csv2("./data/SeoulBikeData.csv", fileEncoding="latin1", sep = ",")
glimpse(data)
new_columns <- c(
"date",
"rented_bike_count",
"temp_celsius",
"humidity",
"wind_speed",
"visibility_10m",
"dew_point_celsius",
"index_solar_radition",
"rain_mm",
"snowfall_cm",
"season",
"holiday",
"functioning_day")
old_columns <- c(
"Date",
"Rented.Bike.Count",
"Temperature..C.",
"Humidity...",
"Wind.speed..m.s.",
"Visibility..10m.",
"Dew.point.temperature..C.",
"Solar.Radiation..MJ.m2.",
"Rainfall.mm.",
"Snowfall..cm.",
"Seasons",
"Holiday",
"Functioning.Day")
data <- data %>% rename_with(~new_columns, all_of(old_columns))
glimpse(data)
set.seed(100)
bike <- data[sample(nrow(data), size = 1000), -1]
pairs(bike[c('rented_bike_count',
'temp_celsius',
'rain_mm',
'wind_speed',
'index_solar_radition',
'humidity',
'visibility_10m')],
col='blue'
)
summary(bike)
bike$temp_celsius <- as.numeric(as.character(bike$temp_celsius))
bike$wind_speed <- as.numeric(as.character(bike$wind_speed))
bike$dew_point_celsius <- as.numeric(as.character(bike$dew_point_celsius))
bike$index_solar_radition <- as.numeric(as.character(bike$index_solar_radition))
bike$rain_mm <- as.numeric(as.character(bike$rain_mm))
bike$snowfall_cm <- as.numeric(as.character(bike$snowfall_cm))
summary(bike)
sum(is.na(bike))
seasons  <- bike %>%  distinct(season)
seasons
holidays <- bike %>% distinct(holiday)
holidays
functioning_days <- bike %>% distinct(functioning_day)
functioning_days
off_days <- bike %>% summarise(count = sum(functioning_day == "No"))
off_days
bike <- bike %>% filter(functioning_day == "Yes")
glimpse(bike)
bike %>%
group_by(season) %>%
ggplot() +
geom_boxplot(aes(x = season, y = rented_bike_count))
cluster_bike = select(bike, rented_bike_count, temp_celsius, rain_mm, index_solar_radition)
cluster_bike = filter(cluster_bike, rain_mm < 7)
modelo = kmeans(cluster_bike[,c('rented_bike_count','temp_celsius')], centers = 4)
rbind( cbind('betweenss:', modelo$betweenss),
cbind('totss:', modelo$totss),
cbind('quality:', modelo$betweenss / modelo$totss ))
plot(cluster_bike[,c('rented_bike_count','temp_celsius')],
col = modelo$cluster,
pch = 20, cex = 2)
points(modelo$centers, col = rev(seq_along(modelo$centers)),
bg=seq_along(modelo$centers), pch = 24, cex =1, lwd = 1)
modelo = kmeans(cluster_bike[,c('rain_mm', 'rented_bike_count')], centers = 3)
rbind( cbind('betweenss:', modelo$betweenss),
cbind('totss:', modelo$totss),
cbind('quality:', modelo$betweenss / modelo$totss ))
plot(cluster_bike[,c('rain_mm', 'rented_bike_count')],
col = modelo$cluster,
pch = 20, cex = 2)
points(modelo$centers, col = rev(seq_along(modelo$centers)),
bg=seq_along(modelo$centers), pch = 24, cex =1, lwd = 1)
modelo = kmeans(cluster_bike[,c('rented_bike_count', 'index_solar_radition', 'temp_celsius')], centers = 4)
rbind( cbind('betweenss:', modelo$betweenss),
cbind('totss:', modelo$totss),
cbind('quality:', modelo$betweenss / modelo$totss ))
plot(cluster_bike[,c('rented_bike_count', 'index_solar_radition', 'temp_celsius')],
col = modelo$cluster,
pch = 20, cex = 2)
points(modelo$centers, col = rev(seq_along(modelo$centers)),
bg=seq_along(modelo$centers), pch = 24, cex =1, lwd = 1)
